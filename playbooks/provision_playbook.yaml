---
- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - name: Assert binaries are available
    shell: |
      kubectl version
      kustomize version
      flux --version
      kubeseal --version
    changed_when: false

  - name: Install dependencies with pip3 module
    pip:
      name:
        - boto3
        - botocore
        - openshift
        - boto
      extra_args: --user

  - import_role:
      name: ms3_inc.tavros.kubernetes_cluster
    vars:
      cluster_state: present

  - set_fact:
      wait_conditions:
        HelmRelease:
          type: Ready
          status: true
          reason: ReconciliationSucceeded

  - name: Install and configure components
    block:
      - include_role:
          name: ms3_inc.tavros.fluxtoolkit

      - include_role:
          name: ms3_inc.tavros.kubeseal

      - include_role:
          name: ms3_inc.tavros.postgresql

      - include_role:
          name: ms3_inc.tavros.namespace

      - include_role:
          name: ms3_inc.tavros.kuma
        when: kuma.enabled

      - include_role:
          name: ms3_inc.tavros.cert_manager
        when: cert_manager.enabled

      - include_role:
          name: ms3_inc.tavros.kong

      - include_role:
          name: ms3_inc.tavros.keycloak
        when: keycloak.enabled

      - include_role:
          name: ms3_inc.tavros.kong_ee_keycloak_sso
        when: keycloak.enabled

      - include_role:
          name: ms3_inc.tavros.nexus
        when: nexus.enabled

      - include_role:
          name: ms3_inc.tavros.elastic_cloud
        when: elastic_cloud.enabled

      - include_role:
          name: ms3_inc.tavros.jaeger
        when: jaeger.enabled and keycloak.enabled and not elastic_cloud.ee.enabled

      - include_role:
          name: ms3_inc.tavros.gitea
        when: gitea.enabled

      - include_role:
          name: ms3_inc.tavros.jenkins
        when: jenkins.enabled

      - include_role:
          name: ms3_inc.tavros.fluxtoolkit
          tasks_from: gitea-setup
        when: gitea.enabled and ('dry-run' not in ansible_run_tags)

    always:
      - copy:
          content: "{{ { 'all': { 'vars': { 'flux': flux, 'cluster_fqdn': cluster_fqdn, 'cluster_admin_email': cluster_admin_email, 'kubernetes_cluster': kubernetes_cluster, 'kong': kong, 'kuma': kuma, 'namespaces': namespaces, 'keycloak': keycloak, 'nexus': nexus, 'postgresql': postgresql, 'elastic_cloud': elastic_cloud, 'cert_manager': cert_manager, 'gitea': gitea, 'jaeger': jaeger, 'jenkins': jenkins }}} | to_nice_yaml(indent=2) }}"
          dest: /tmp/{{ cluster_fqdn }}_vars.yaml
      - include_role:
          name: ms3_inc.tavros.kubernetes_cluster
          tasks_from: tavros_config_backup
        when: ('dry-run' not in ansible_run_tags)
