---
- name: Create Directory
  file:
    path: /tmp/{{ cluster_fqdn }}/platform/jaeger/default
    state: directory
  tags: [ jaeger ]

# Import Elasticsearch certificates
# https://www.elastic.co/guide/en/cloud-on-k8s/1.3/k8s-tls-certificates.html#k8s-default-self-signed-certificate
- name: Get tavros-es-cert-public Resource from elastic-system Namespace
  tags: [ requires_cluster, jaeger ]
  when: ('dry-run' not in ansible_run_tags)
  ms3_inc.tavros.kube_info:
    kubeconfig: '~/.kube/config'
    api_version: v1
    kind: Secret
    name: tavros-es-http-certs-public
    namespace: elastic-system
  register: elastic_certs

- name: Generate Keycloak Client Secret
  when: jaeger.keycloak.client_secret is not defined
  set_fact:
    jaeger: "{{ jaeger | combine({ 'keycloak': { 'client_secret': uuid } } , recursive=true) }}"
  vars:
    uuid: "{{ 1000000 | random | to_uuid }}"
  tags: [ jaeger ]

- name: Template Files
  template:
    src: "{{ item.name }}.j2"
    dest: /tmp/{{ cluster_fqdn }}/platform/jaeger/{{ item.dest | default(item.name) }}.yaml
  when: item.condition | default(true)
  loop:
    - name: ingress
      dest: default/ingress
    - name: keycloakclient
      dest: default/keycloakclient
    - name: kongplugin-oidc
      dest: default/kongplugin-oidc
    - name: secret-es-creds
      dest: default/secret-es-creds
    - name: secret-es-http-certs
      dest: default/secret-es-http-certs
  tags: [ jaeger ]

- name: Copy Files
  copy:
    src: "{{ item.name }}"
    dest: /tmp/{{ cluster_fqdn }}/platform/jaeger/{{ item.dest | default(item.name) }}
  when: item.condition | default(true)
  loop:
    - name: kustomization.yaml
    - name: cronjob-spark-dependencies.yaml
      dest: default/cronjob-spark-dependencies.yaml
    - name: jaeger.yaml
      dest: default/jaeger.yaml
    - name: operator
      dest: ""
  tags: [ jaeger ]

- name: Seal Secrets
  tags: [ requires_cluster, jaeger ]
  when: ('dry-run' not in ansible_run_tags) and (item.condition | default(true))
  shell: |
    kubeseal --format=yaml </tmp/{{ cluster_fqdn }}/platform/jaeger/{{ item.name }}.yaml >/tmp/{{ cluster_fqdn }}/platform/jaeger/{{ item.name }}.tmp
    mv /tmp/{{ cluster_fqdn }}/platform/jaeger/{{ item.name }}.tmp /tmp/{{ cluster_fqdn }}/platform/jaeger/{{ item.name }}.yaml
  loop:
    - name: default/secret-es-creds
    - name: default/secret-es-http-certs

- name: Apply Resources
  tags: [ requires_cluster, jaeger ]
  when: ('dry-run' not in ansible_run_tags)
  with_ms3_inc.tavros.kustomize: /tmp/{{ cluster_fqdn }}/platform/jaeger/
  loop_control:
    label: "{{ item.kind }}/{{ item.metadata.name | default('unnamed')}}"
  ms3_inc.tavros.kube:
    kubeconfig: '~/.kube/config'
    definition: "{{ item }}"
    wait: true
    wait_condition: "{{ wait_conditions[item.kind] | default(omit) }}"
    wait_timeout: 900

- name: Wait for Keycloak Client
  tags: [ requires_cluster, jaeger ]
  when: ('dry-run' not in ansible_run_tags)
  ms3_inc.tavros.kube_info:
    kubeconfig: '~/.kube/config'
    api_version: keycloak.org/v1alpha1
    kind: KeycloakClient
    name: tavros-jaeger
    namespace: keycloak
  register: keycloak_def
  # https://github.com/keycloak/keycloak-operator/blob/11.0.3/deploy/crds/keycloak.org_keycloaks_crd.yaml#L175
  until: ('status' in keycloak_def.resources[0]) and (keycloak_def.resources[0].status.ready)
  retries: 30
  delay: 30
  changed_when: false

- name: Create Keycloak jaeger Client Roles
  tags: [ requires_cluster, jaeger ]
  when: ('dry-run' not in ansible_run_tags)
  ms3_inc.tavros.keycloak_client_roles:
    auth_keycloak_url: 'https://auth.{{ cluster_fqdn }}/auth'
    validate_certs: false
    auth_realm: master
    auth_username: admin
    auth_password: "{{ lookup('ms3_inc.tavros.kube', kubeconfig='~/.kube/config', kind='Secret', namespace='keycloak', resource_name='credential-tavros').data.ADMIN_PASSWORD | b64decode }}"
    realm: "{{ jaeger.keycloak.realm}}"
    clientId: jaeger
    roles:
    - name: "user"

- name: Add Keycloak jaeger Client Role user to Realm Admin User
  blockinfile:
    marker_begin: "Begin jaeger"
    marker_end: "End jaeger"
    path: /tmp/{{ cluster_fqdn }}/platform/keycloak/default/{{ jaeger.keycloak.realm }}/keycloakuser-admin.yaml
    insertafter: "    clientRoles:"
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |2
            jaeger:
              - user
  tags: [ jaeger ]

- name: Apply Updated Keycloak Realm Admin User Resource
  tags: [ requires_cluster, jaeger ]
  when: ('dry-run' not in ansible_run_tags)
  ms3_inc.tavros.kube:
    kubeconfig: '~/.kube/config'
    state: present
    src: /tmp/{{ cluster_fqdn }}/platform/keycloak/default/{{ jaeger.keycloak.realm }}/keycloakuser-admin.yaml

- name: Process flux-kustomization template
  template:
    src: flux-kustomization.j2
    dest: /tmp/{{ cluster_fqdn }}/platform/flux-system/watches/jaeger.yaml
  tags: [ jaeger ]
