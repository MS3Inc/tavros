- name: Set DNS for Kongs by Name
  when: ('dry-run' not in ansible_run_tags)
  tags: [ kong_dns, aks, requires_cluster ]
  azure_rm_dnsrecordset:
    resource_group: "{{ aks.resource_group }}"
    zone_name: "{{ cluster_fqdn }}"
    relative_name: "*.{{ item.name }}"
    record_type: A
    records:
      - entry: "{{ kong_ip }}"
  vars:
    instance_kong_proxy: "kong-tavros-{{ item.name }}{{'-dp' if item.hybrid }}-kong-proxy"
    kong_ip: "{{ lookup('ms3_inc.tavros.kube', kubeconfig='~/.kube/config', kind='Service', namespace='kong', resource_name=instance_kong_proxy).status.loadBalancer.ingress[0].ip }}"
  loop: "{{ kong.instances }}"

- name: Set DNS for Default Ingress Class
  when: ('dry-run' not in ansible_run_tags)
  tags: [ kong_dns, aks, requires_cluster ]
  azure_rm_dnsrecordset:
    resource_group: "{{ aks.resource_group }}"
    zone_name: "{{ cluster_fqdn }}"
    relative_name: "*"
    record_type: A
    records:
      - entry: "{{ kong_ip }}"
  vars:
    prod_kong_proxy: "kong-tavros-{{ (kong.instances | selectattr('ingress_class', 'equalto', kong.default_ingress_class) | first).name }}{{'-dp' if (kong.instances | selectattr('ingress_class', 'equalto', kong.default_ingress_class) | first).hybrid }}-kong-proxy"
    kong_ip: "{{ lookup('ms3_inc.tavros.kube', kubeconfig='~/.kube/config', kind='Service', namespace='kong', resource_name=prod_kong_proxy).status.loadBalancer.ingress[0].ip }}"

- name: Set DNS for Non-Default Ingress Classes
  when: ('dry-run' not in ansible_run_tags) and (item.ingress_class != kong.default_ingress_class)
  tags: [ kong_dns, aks, requires_cluster ]
  azure_rm_dnsrecordset:
    resource_group: "{{ aks.resource_group }}"
    zone_name: "{{ cluster_fqdn }}"
    relative_name: "*.{{ item.ingress_class }}"
    record_type: A
    records:
      - entry: "{{ kong_ip }}"
  vars:
    instance_kong_proxy: "kong-tavros-{{ item.name }}{{'-dp' if item.hybrid }}-kong-proxy"
    kong_ip: "{{ lookup('ms3_inc.tavros.kube', kubeconfig='~/.kube/config', kind='Service', namespace='kong', resource_name=instance_kong_proxy).status.loadBalancer.ingress[0].ip }}"
  loop: "{{ kong.instances }}"