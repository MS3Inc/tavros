apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ item.name }}
  namespace: kong
  annotations:
    konghq.com/strip-path: "true"
    konghq.com/protocols: https
    kubernetes.io/ingress.class: {{ item.ingress_class }}
    cert-manager.io/cluster-issuer: troubadour
    konghq.com/https-redirect-status-code: '302'
spec:
  tls:
  - hosts:
    - "admin-api.{{ item.name }}.{{ cluster_name }}.{{ cluster_domain }}"
    - "admin.{{ item.name }}.{{ cluster_name }}.{{ cluster_domain }}"
    - "dev-portal-api{{ ('.' + item.ingress_class) if (item.ingress_class != kong.default_ingress_class) else ('') }}.{{ cluster_name }}.{{ cluster_domain }}"
    - "dev-portal{{ ('.' + item.ingress_class) if (item.ingress_class != kong.default_ingress_class) else ('') }}.{{ cluster_name }}.{{ cluster_domain }}"
    - "apps{{ ('.' + item.ingress_class) if (item.ingress_class != kong.default_ingress_class) else ('') }}.{{ cluster_name }}.{{ cluster_domain }}"
    secretName: {{ item.name }}-ingress-certs
  rules:
  - host: "admin-api.{{ item.name }}.{{ cluster_name }}.{{ cluster_domain }}"
    http:
      paths:
      - path: /
        backend:
          serviceName: kong-{{ item.name }}-kong-admin
          servicePort: 8001
  - host: "admin.{{ item.name }}.{{ cluster_name }}.{{ cluster_domain }}"
    http:
      paths:
      - path: /
        backend:
          serviceName: kong-{{ item.name }}-kong-manager
          servicePort: 8002
  - host: "dev-portal{{ ('.' + item.ingress_class) if (item.ingress_class != kong.default_ingress_class) else ('') }}.{{ cluster_name }}.{{ cluster_domain }}"
    http:
      paths:
      - path: /
        backend:
          serviceName: kong-{{ item.name }}-kong-portal
          servicePort: 8003
  - host: "dev-portal-api{{ ('.' + item.ingress_class) if (item.ingress_class != kong.default_ingress_class) else ('') }}.{{ cluster_name }}.{{ cluster_domain }}"
    http:
      paths:
      - path: /
        backend:
          serviceName: kong-{{ item.name }}-kong-portalapi
          servicePort: 8004
  - host: "apps{{ ('.' + item.ingress_class) if (item.ingress_class != kong.default_ingress_class) else ('') }}.{{ cluster_name }}.{{ cluster_domain }}"
    http:
      paths:
      - path: /
        backend:
          serviceName: kong-{{ item.name }}-kong-proxy
          servicePort: 80
