---
- name: Create Directory
  file:
    path: /tmp/{{ cluster_fqdn }}/platform/nexus/default
    state: directory
  tags: [ nexus ]

- name: Generate Keycloak Client Secret
  when: (nexus.keycloak.client_secret is not defined)
  set_fact:
    nexus: "{{ nexus | combine({ 'keycloak': { 'client_secret': uuid }} , recursive=true) }}"
  vars:
    uuid: "{{ 1000000 | random | to_uuid }}"
  tags: [ nexus ]

- name: Template Files
  template:
    src: "{{ item.name }}.j2"
    dest: /tmp/{{ cluster_fqdn }}/platform/nexus/{{ item.dest | default(item.name) }}.yaml
  when: item.condition | default(true)
  loop:
    - name: ingress
      dest: default/ingress
    - name: ingress-buildtools
      dest: default/ingress-buildtools
    - name: keycloakclient
      dest: default/keycloakclient
    - name: kongplugin-oidc
      dest: default/kongplugin-oidc
    - name: secret-keycloak-config
      dest: default/secret-keycloak-config
  tags: [ nexus ]

- name: Copy Files
  copy:
    src: "{{ item.name }}"
    dest: /tmp/{{ cluster_fqdn }}/platform/nexus/{{ item.dest | default(item.name) }}
  when: item.condition | default(true)
  loop:
    - name: ns.yaml
    - name: kustomization.yaml
    - name: release.yaml
      dest: default/release.yaml
    - name: service-container-registry.yaml
      dest: default/service-container-registry.yaml
    - name: configmap-properties.yaml
      dest: default/configmap-properties.yaml
    - name: pvc-deploy.yaml
      dest: default/pvc-deploy.yaml
  tags: [ nexus ]

- name: Seal Secrets
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags) and (item.condition | default(true))
  shell: |
    kubeseal --format=yaml </tmp/{{ cluster_fqdn }}/platform/nexus/{{ item.name }}.yaml >/tmp/{{ cluster_fqdn }}/platform/nexus/{{ item.name }}.tmp
    mv /tmp/{{ cluster_fqdn }}/platform/nexus/{{ item.name }}.tmp /tmp/{{ cluster_fqdn }}/platform/nexus/{{ item.name }}.yaml
  loop:
    - name: default/secret-keycloak-config

- name: Apply Resources
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags)
  with_ms3_inc.tavros.kustomize: /tmp/{{ cluster_fqdn }}/platform/nexus/
  loop_control:
    label: "{{ item.kind }}/{{ item.metadata.name | default('unnamed')}}"
  ms3_inc.tavros.kube:
    kubeconfig: '~/.kube/config'
    definition: "{{ item }}"
    wait: true
    wait_condition: "{{ wait_conditions[item.kind] | default(omit) }}"
    wait_timeout: 900

- name: Wait for Nexus
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags)
  community.kubernetes.k8s_info:
    kubeconfig: '~/.kube/config'
    kind: Pod
    label_selectors:
    - "app.kubernetes.io/name = nexus-repository-manager"
    namespace: nexus
    wait: true
    wait_timeout: 900
  changed_when: false

- name: Retreive admin.password
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags)
  community.kubernetes.k8s_exec:
    kubeconfig: '~/.kube/config'
    namespace: nexus
    pod: "{{ lookup('community.kubernetes.k8s', kubeconfig='~/.kube/config', kind='Pod', namespace='nexus', label_selector=nexus_pod_name).metadata.name }}"
    command: |
      cat nexus-data/admin.password
  vars:
    nexus_pod_name: "app.kubernetes.io/name=nexus-repository-manager"
  register: nexus_creds

- name: Set nexus.admin_password Variable
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags)
  set_fact:
    nexus: "{{ nexus | combine({ 'generated': { 'admin_password': nexus_creds.stdout } }, recursive=True) }}"

- name: Wait for Keycloak Client
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags)
  ms3_inc.tavros.kube_info:
    kubeconfig: '~/.kube/config'
    api_version: keycloak.org/v1alpha1
    kind: KeycloakClient
    name: tavros-nexus
    namespace: keycloak
  register: keycloak_def
  # https://github.com/keycloak/keycloak-operator/blob/11.0.3/deploy/crds/keycloak.org_keycloaks_crd.yaml#L175
  until: ('status' in keycloak_def.resources[0]) and (keycloak_def.resources[0].status.ready)
  retries: 30
  delay: 30
  changed_when: false

- name: Create Keycloak nexus Client Roles
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags)
  ms3_inc.tavros.keycloak_client_roles:
    auth_keycloak_url: 'https://auth.{{ cluster_fqdn }}/auth'
    validate_certs: false
    auth_realm: master
    auth_username: admin
    auth_password: "{{ lookup('ms3_inc.tavros.kube', kubeconfig='~/.kube/config', kind='Secret', namespace='keycloak', resource_name='credential-tavros').data.ADMIN_PASSWORD | b64decode }}"
    realm: "{{ nexus.keycloak.realm }}"
    clientId: "nexus"
    roles:
    - name: "admin"
    - name: "developer"
    serviceAccountRoles:
      clientRoles:
        realm-management:
          - name: "view-clients"
          - name: "view-users"
          - name: "view-realm"

- name: Add Keycloak nexus Client Role admin to Realm Admin User
  blockinfile:
    marker_begin: "Begin nexus"
    marker_end: "End nexus"
    path: /tmp/{{ cluster_fqdn }}/platform/keycloak/default/{{ nexus.keycloak.realm }}/keycloakuser-admin.yaml
    insertafter: "    clientRoles:"
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |2
            nexus:
              - admin
  tags: [ nexus ]

- name: Apply Updated Keycloak Realm Admin User Resource
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags)
  ms3_inc.tavros.kube:
    kubeconfig: '~/.kube/config'
    state: present
    src: /tmp/{{ cluster_fqdn }}/platform/keycloak/default/{{ nexus.keycloak.realm }}/keycloakuser-admin.yaml

- include_tasks: create-repositories.yaml
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags)

- include_tasks: configure-auth.yaml
  tags: [ requires_cluster, nexus ]
  when: ('dry-run' not in ansible_run_tags)

- name: Template flux-kustomization
  template:
    src: flux-kustomization.j2
    dest: /tmp/{{ cluster_fqdn }}/platform/flux-system/watches/nexus.yaml
  tags: [ nexus ]
