apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tavros-prod-kong
  namespace: kong
  annotations:
    konghq.com/strip-path: "true"
    konghq.com/protocols: https
    kubernetes.io/ingress.class: prod
    cert-manager.io/cluster-issuer: tavros
    konghq.com/https-redirect-status-code: '302'
spec:
  tls:
  - hosts:
    - "admin-api.prod-kong.tavros.enterprise-example.com"
    - "admin.prod-kong.tavros.enterprise-example.com"
    - "dev-portal-api.tavros.enterprise-example.com"
    - "dev-portal.tavros.enterprise-example.com"
    - "apps.tavros.enterprise-example.com"
    secretName: prod-kong-ingress-certs
  rules:
  - host: "admin-api.prod-kong.tavros.enterprise-example.com"
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: kong-tavros-prod-kong-cp-kong-admin
            port:
              number: 8001
  - host: "admin.prod-kong.tavros.enterprise-example.com"
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: kong-tavros-prod-kong-cp-kong-manager
            port:
              number: 8002
  - host: "dev-portal.tavros.enterprise-example.com"
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: kong-tavros-prod-kong-cp-kong-portal
            port:
              number: 8003
  - host: "dev-portal-api.tavros.enterprise-example.com"
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: kong-tavros-prod-kong-cp-kong-portalapi
            port:
              number: 8004
  - host: "apps.tavros.enterprise-example.com"
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: kong-tavros-prod-kong-dp-kong-proxy
            port:
              number: 80
