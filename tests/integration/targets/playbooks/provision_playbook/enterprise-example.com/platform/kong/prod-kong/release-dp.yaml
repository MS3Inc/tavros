apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tavros-prod-kong-dp
  namespace: kong
spec:
  targetNamespace: kong
  interval: 10m
  chart:
    spec:
      # https://github.com/Kong/charts/tree/kong-2.3.0/charts/kong
      chart: kong
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: kong
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: kong/kong-gateway
      tag: '2.5.0.0-alpine'
    env:
    
      role: data_plane
      cluster_mtls: pki
      cluster_ca_cert: /etc/secrets/prod-kong-dp-cert/ca.crt
      cluster_cert: /etc/secrets/prod-kong-dp-cert/tls.crt
      cluster_cert_key: /etc/secrets/prod-kong-dp-cert/tls.key
      lua_ssl_trusted_certificate: /etc/secrets/prod-kong-dp-cert/tls.crt
      cluster_server_name: kong-tavros-prod-kong-cp-kong-cluster.kong.svc.cluster.local
      cluster_control_plane: kong-tavros-prod-kong-cp-kong-cluster.kong.svc.cluster.local:8005
      cluster_telemetry_endpoint: kong-tavros-prod-kong-cp-kong-clustertelemetry.kong.svc.cluster.local:8006
      # see: https://github.com/elastic/beats/pull/14505
      # https://docs.konghq.com/gateway-oss/2.4.x/logging/
      # https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
      nginx_http_log_format: |
        extended '$host $remote_addr - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent ' '"$http_referer" "$http_user_agent"'
      proxy_access_log: /dev/stdout extended
      database: "off"
    ingressController:
      enabled: False
    podAnnotations:
      co.elastic.logs.proxy/enabled: "true"
      co.elastic.logs.proxy/module: nginx
      co.elastic.logs.proxy/fileset.stdout: access
      co.elastic.logs.proxy/fileset.stderr: error
    admin:
      enabled: False
      http:
        enabled: true
    proxy:
      enabled: True
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    portal:
      enabled: False
    portalapi:
      enabled: False
    manager:
      enabled: False
    enterprise:
      enabled: true
      license_secret: default-ee-license
      vitals:
        enabled: False
      portal:
        enabled: False
      rbac:
        enabled: False
    secretVolumes:
    - prod-kong-dp-cert
    deployment:
      userDefinedVolumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token
      userDefinedVolumes:
      - name: default-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 7200
              path: token
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/instance: kong-tavros-prod-kong-dp
          app.kubernetes.io/name: kong
    resources:
      limits:
       cpu: 1
       memory: 1Gi
      requests:
       cpu: 500m
       memory: 1Gi
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 4
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 80
