apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tavros-sandbox-kong
  namespace: kong
spec:
  targetNamespace: kong
  interval: 10m
  chart:
    spec:
      # https://github.com/Kong/charts/tree/kong-1.15.2/charts/kong
      chart: kong
      version: 1.15.2
      sourceRef:
        kind: HelmRepository
        name: kong
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      tag: '2.3'
    env:
      # see: https://github.com/elastic/beats/pull/14505
      # https://docs.konghq.com/gateway-oss/2.4.x/logging/
      # https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
      nginx_http_log_format: |
        extended '$host $remote_addr - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent ' '"$http_referer" "$http_user_agent"'
      proxy_access_log: /dev/stdout extended
      database: postgres
      pg_host: tavros-postgresql.postgresql
      pg_port: '5432'
      pg_database:
        valueFrom:
          secretKeyRef:
            name: tavros-sandbox-kong-pg-creds
            key: pg_database
      pg_user:
        valueFrom:
          secretKeyRef:
            name: tavros-sandbox-kong-pg-creds
            key: pg_user
      pg_password:
        valueFrom:
          secretKeyRef:
            name: tavros-sandbox-kong-pg-creds
            key: pg_password
    ingressController:
      ingressClass: sandbox
      installCRDs: false
      env:
      # see https://github.com/Kong/charts/issues/224
        kong_admin_tls_skip_verify: 'true'
    podAnnotations: {
      kuma.io/sidecar-injection: enabled,
      kuma.io/gateway: enabled,
      kuma.io/mesh: sandbox,
      co.elastic.logs.proxy/enabled: "true",
      co.elastic.logs.proxy/module: nginx,
      co.elastic.logs.proxy/fileset.stdout: access,
      co.elastic.logs.proxy/fileset.stderr: error
    }
    admin:
      enabled: true
      http:
        enabled: true
    proxy:
      enabled: true
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
